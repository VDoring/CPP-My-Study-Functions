//085
//2차원 배열 함수 인자 사용하기
#include <iostream>

using namespace std;

//2차원 배열은 5번 라인처럼 직접 크기를 지정해 인자로 받을 수 있다.
//1차원 배열과 마찬가지로 포인터 형태로 받으며, 이 함수는 1행 1열의 값을 1000으로 변경한다.
void Func1(int arr[2][2])
{
	arr[0][0] = 1000; //여기에서는 1행 1열의 값을 1000으로 변경한다.
}

//2차원 배열 인자의 행은 생략할 수 있다. 하지만 이럴 경우 배열 크기를 가늠할 수 없어서 행 크기를 담는 변수를 함꼐 인자로 받아야 한다.
//이 함수는 1행 2열의 값을 2000으로 변경한다.
void Func2(int arr[][2], int row)
{
	arr[row - 2][1] = 2000; //여기에서는 1행 2열의 값을 2000으로 변경한다.
}

//2차원 배열을 포인터로 받을 수 있다.
//인자로 받는 int *arr은 data배열의 1행 1열, 즉 첫번쨰 데이터를 가리킨다.
//*를 추가하고 괄호 안에 행(row)과 열(col)을 더함으로써 2차원 배열을 사용할 수 있다.
void Func3(int *arr, int row, int col)
{
	*((arr + row - 1) + col - 1) = 3000; //여기에서는 2행 1열의 값을 3000으로 변경한다.
}

int main()
{
	int data[2][2] = { {1,2},{3,4} };

	Func1(data);
	Func2(data, 2);
	Func3(*data, 2, 2);

	cout << "== 결과 ==" << endl;
	for (int i = 0; i < 2; i++)
	{
		for (int j = 0; j < 2; j++)
		{
			cout << data[i][j] << endl;
		}
	}

	return 0;
}