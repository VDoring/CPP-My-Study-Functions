//167
//for each 반복문 사용하기(C++/CLI)
#include <iostream>

using namespace std;

int main()
{
	int data[] = { 10,20,30,40 }; //정수 4개를 저장하는 배열을 선언한다.

	for each (int &i in data) //함수의 첫 번째 인자는 자료형, 두 번쨰 인자는 반복문 안에서 사용할 변수, 네 번째 인자는 배열이다. 해당 라인을 통해 순회하며 data1의 주소를 i에 할당한다. 그리고 12번 라인처럼 주소 참조를 통해 배열의 실제 값을 수정할 수도 있다.
		i += 10;

	cout << "== for each ==" << endl;

	for each (const int i in data1) //11번 라인 코드에서 const가 추가되고 &가 제거되었다. const를 이용하여 상수화할 수 있으며 이 경우 13번 라인처럼 값을 수정할 수 없다. 12번 라인에서 배열의 모든 값에 10을 더했으므로 결과는 20,30,40,50 이다.
		cout << i << ", ";

	cout << endl;

	return 0;
}

/*
for문은 순회할 범위의 시작과 끝을 직접 지정한다.
떄로는 배열의 크기를 잘못 알고 범위를 잘못 지정해 에러가 발생하기도 한다.
그래서 for문을 조금 더 쉽고 정확하게 사용하기 위하여 for each 문이 도입되었다.
다만, 이 장에서 소개하는 for each는 마이크로소프트 Visual C++에서만 사용할 수 있으며, 컨테이너를 사용할 수 없다는 단점이 있다.

실제로 MSDN 홈페이지에 젖ㅂ속하면 비표준 키워드라 사용하지 않는 것이 좋다고 설명하고 있다.
그래서 다른 컴파일러에서도 적용되는 범용적인 std::for_each를 사용하는 것이 좋다.
다음 장에서 소개하는 std::for_each와 다음 다음 장에서 소개하는 범위 기반 for문 사용을 권장한다.

이 장을 통해선 std::for_each와는 다른 비주얼 스튜디오 전용 for each가 있고 간단한 사용 방법은 무엇인지 이해하면 된다.
*/